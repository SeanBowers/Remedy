@model IEnumerable<Remedy.Models.Project>
@using Remedy.Enums
@using Remedy.Services.Interfaces;

@inject IFileService fileService
@inject IBTProjectService projectService

@{
    ViewData["Title"] = "Index";
}
<partial name="_Notification" />

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th>
                PM
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Created)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img src='@fileService.ConvertByteArrayToFile(item.ImageData!, item.ImageType!,(int)DefaultImage.Project)' alt="..." style="width:100px;height:100px">
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProjectPriority!.Name)
                </td>
                <td>
                    @{BTUser pm = await projectService.GetProjectManagerAsync(item.Id)!;}
                    @if(pm != null)
                    {
                        @pm.FullName;
                    } else {
                        <a asp-action="AssignProjectManager" asp-route-id="@item.Id">Assign PM</a>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="AssignProjectManager" asp-route-id="@item.Id">Assign PM</a>
                    <a asp-action="AssignProjectMembers" asp-route-id="@item.Id">Assign Members</a>
                    <a asp-action="Archive" asp-route-id="@item.Id">Archive</a>
                </td>
            </tr>
        }
    </tbody>
</table>
